import {
  to = segment_reverse_etl_model.id-x9Ph9EQAX2jaDtvUqnyLpY
  id = "x9Ph9EQAX2jaDtvUqnyLpY"
}

resource "segment_reverse_etl_model" "id-x9Ph9EQAX2jaDtvUqnyLpY" {
  description             = "Programatically generated rETL model that is associated with an Engage rETL audience"
  enabled                 = true
  name                    = "bc-test-linked-audience-demo"
  query                   = "WITH ID_GRAPH AS (\n    SELECT \"SEGMENT_ID\", \"CANONICAL_SEGMENT_ID\" FROM (\n        SELECT updates.\"SEGMENT_ID\", updates.\"CANONICAL_SEGMENT_ID\",\n        row_number() OVER(PARTITION BY updates.\"SEGMENT_ID\"\n            ORDER BY updates2.\"CANONICAL_SEGMENT_ID\" IS NOT NULL, updates.\"SEQ\" DESC NULLS FIRST) AS rn\n        FROM \"NON_PROD_SEGMENT_EVENTS\".\"DRIVETIME_DEV\".\"ID_GRAPH_UPDATES\" AS updates\n        LEFT JOIN \"NON_PROD_SEGMENT_EVENTS\".\"DRIVETIME_DEV\".\"ID_GRAPH_UPDATES\" AS updates2 ON updates2.\"SEGMENT_ID\" = updates.\"CANONICAL_SEGMENT_ID\"\n            AND CAST(updates.\"UUID_TS\" AS TIMESTAMP) < (CAST(updates2.\"UUID_TS\" AS TIMESTAMP) + INTERVAL '2 hour')\n            AND updates2.\"CANONICAL_SEGMENT_ID\" <> updates2.\"SEGMENT_ID\"\n            AND updates2.\"CANONICAL_SEGMENT_ID\" <> updates.\"CANONICAL_SEGMENT_ID\"\n    ) AS ORDERED_ID_GRAPH WHERE rn = 1\n), EXTERNAL_ID_MAPPING AS (\n    SELECT \"CANONICAL_SEGMENT_ID\", \"EXTERNAL_ID_TYPE\", \"EXTERNAL_ID_VALUE\" FROM (\n        SELECT COALESCE(id_graph.\"CANONICAL_SEGMENT_ID\", ids.\"SEGMENT_ID\") AS \"CANONICAL_SEGMENT_ID\", ids.\"EXTERNAL_ID_TYPE\", ids.\"EXTERNAL_ID_VALUE\",\n        ROW_NUMBER() OVER (PARTITION BY ids.\"EXTERNAL_ID_HASH\" ORDER BY ids.\"TIMESTAMP\" DESC) AS rn\n        FROM \"NON_PROD_SEGMENT_EVENTS\".\"DRIVETIME_DEV\".\"EXTERNAL_ID_MAPPING_UPDATES\" AS ids\n        LEFT JOIN ID_GRAPH AS id_graph ON id_graph.\"SEGMENT_ID\" = ids.\"SEGMENT_ID\"\n\t\tWHERE \"EXTERNAL_ID_TYPE\" IN ('android.idfa','email','ios.idfa','user_id')\n    ) AS ORDERED_EXTERNAL_ID_MAPPING WHERE rn = 1\n), PROFILE_TRAITS AS (\n    SELECT DISTINCT \"CANONICAL_SEGMENT_ID\" FROM EXTERNAL_ID_MAPPING\n), ECG_1 AS (\n\tWITH filtered_query AS (\n\t\tSELECT A.\"CANONICAL_SEGMENT_ID\" AS \"A_CANONICAL_SEGMENT_ID\", B.\"CUSTOMERID\" AS \"B_CUSTOMERID\", C.\"ACCOUNTNUMBER\" AS \"C_ACCOUNTNUMBER\", C.\"ACCOUNTSTATUSKEY\" AS \"C_ACCOUNTSTATUSKEY\", C.\"NUMBEROFDAYSPASTDUE\" AS \"C_NUMBEROFDAYSPASTDUE\", C.\"PASTDUEAMOUNT\" AS \"C_PASTDUEAMOUNT\", C.\"LENDINGPROVIDERKEY\" AS \"C_LENDINGPROVIDERKEY\", C.\"VEHICLEESTIMATEPREDICTEDAMOUNT\" AS \"C_VEHICLEESTIMATEPREDICTEDAMOUNT\", C.\"VIN\" AS \"C_VIN\", C.\"PASTDUEDATE\" AS \"C_PASTDUEDATE\", C.\"VEHICLEMAKE\" AS \"C_VEHICLEMAKE\", C.\"VEHICLEMODEL\" AS \"C_VEHICLEMODEL\", C.\"VEHICLEYEAR\" AS \"C_VEHICLEYEAR\", C.\"VIN6\" AS \"C_VIN6\", C.\"ROUTE\" AS \"C_ROUTE\"\n\t\tFROM \"NON_PROD_REPLICATED\".\"SHAREDLOANDATA\".\"REPORTING_TBLACCOUNTINFO\" C\n\t\tINNER JOIN \"NON_PROD_REPLICATED\".\"SHAREDLOANDATA\".\"ACCOUNT_TBLCUSTOMER\" B ON B.\"CUSTOMERID\" = C.\"CUSTOMERIDBUYER\"\n\t\tINNER JOIN EXTERNAL_ID_MAPPING A ON A.\"EXTERNAL_ID_TYPE\" = 'user_id' AND A.\"EXTERNAL_ID_VALUE\" = CAST(B.\"CUSTOMERGUID\" AS VARCHAR)\n\t\tWHERE ((C.\"NUMBEROFDAYSPASTDUE\" IS NOT DISTINCT FROM 1))\n\t)\n\tSELECT * FROM filtered_query\n), ECG_1_SEGMENT_ID AS (\n\tSELECT \"A_CANONICAL_SEGMENT_ID\" AS \"CANONICAL_SEGMENT_ID\" FROM ECG_1 GROUP BY \"A_CANONICAL_SEGMENT_ID\"\n), PROFILE_FILTER AS (\n\tSELECT \"CANONICAL_SEGMENT_ID\" FROM PROFILE_TRAITS PT\n\tWHERE (\"CANONICAL_SEGMENT_ID\" IN (SELECT \"CANONICAL_SEGMENT_ID\" FROM ECG_1_SEGMENT_ID))\n), ECG_1_FILTERED AS (\n\tSELECT * FROM ECG_1 ECG INNER JOIN PROFILE_FILTER PF ON ECG.\"A_CANONICAL_SEGMENT_ID\" = PF.\"CANONICAL_SEGMENT_ID\"\n)\nSELECT DISTINCT * FROM (\n\tSELECT \"CANONICAL_SEGMENT_ID\" as \"MATCHID\", \"CANONICAL_SEGMENT_ID\", NULL AS \"2_ACCOUNTSTATUSKEY\", NULL AS \"2_LENDINGPROVIDERKEY\", NULL AS \"2_NUMBEROFDAYSPASTDUE\", NULL AS \"2_PASTDUEAMOUNT\", NULL AS \"2_PASTDUEDATE\", NULL AS \"2_ROUTE\", NULL AS \"2_VEHICLEESTIMATEPREDICTEDAMOUNT\", NULL AS \"2_VEHICLEMAKE\", NULL AS \"2_VEHICLEMODEL\", NULL AS \"2_VEHICLEYEAR\", NULL AS \"2_VIN\", NULL AS \"2_VIN6\"\n\tFROM PROFILE_FILTER\n\tUNION ALL\n\tSELECT \"A_CANONICAL_SEGMENT_ID\" || ':' ||  '2' || ':' || REPLACE(CAST(\"B_CUSTOMERID\" AS VARCHAR), ':', '::') || ':' || REPLACE(CAST(\"C_ACCOUNTNUMBER\" AS VARCHAR), ':', '::') as \"MATCHID\", \"A_CANONICAL_SEGMENT_ID\" as CANONICAL_SEGMENT_ID, \"C_ACCOUNTSTATUSKEY\", \"C_LENDINGPROVIDERKEY\", \"C_NUMBEROFDAYSPASTDUE\", \"C_PASTDUEAMOUNT\", CAST(\"C_PASTDUEDATE\" as VARCHAR) as \"C_PASTDUEDATE\", \"C_ROUTE\", \"C_VEHICLEESTIMATEPREDICTEDAMOUNT\", \"C_VEHICLEMAKE\", \"C_VEHICLEMODEL\", \"C_VEHICLEYEAR\", \"C_VIN\", \"C_VIN6\"\n\tFROM ECG_1_FILTERED WHERE \"C_ACCOUNTNUMBER\" IS NOT NULL\n\tUNION ALL\n\tSELECT \"A_CANONICAL_SEGMENT_ID\" || ':' ||  '1' || ':' || REPLACE(CAST(\"B_CUSTOMERID\" AS VARCHAR), ':', '::') as \"MATCHID\", \"A_CANONICAL_SEGMENT_ID\" as CANONICAL_SEGMENT_ID, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL\n\tFROM ECG_1_FILTERED WHERE \"B_CUSTOMERID\" IS NOT NULL\n) AS DEDUPED_PROJECTIONS"
  query_identifier_column = "matchId"
  schedule_config         = jsonencode({})
  schedule_strategy       = ""
  source_id               = "8pz8SETEasi2XtMVeBTLA7"
}